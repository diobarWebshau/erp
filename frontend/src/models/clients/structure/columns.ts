// columns/clients/columnsClients.ts

import type {
    ColumnDef
} from "@tanstack/react-table";
import type {
    IClient
} from "../../../interfaces/clients";

const columnsClients: ColumnDef<IClient>[] = [
    {
        accessorKey: "id",
        header: "ID",
        meta: {
            hidden: true,
            type: "number",
            autoGenerated: true,
        },
    },
    {
        accessorKey: "company_name",
        header: "Company Name",
        meta: {
            hidden: false,
            type: "string",
            typeText: "text",
            autoGenerated: false,
        },
    },
    {
        accessorKey: "tax_id",
        header: "Tax ID",
        meta: {
            hidden: true,
            type: "string",
            typeText: "text",
            autoGenerated: false,
        },
    },
    {
        accessorKey: "email",
        header: "Email",
        meta: {
            hidden: false,
            type: "string",
            typeText: "text",
            autoGenerated: false,
        },
    },
    {
        accessorKey: "phone",
        header: "Phone",
        meta: {
            hidden: false,
            type: "string",
            typeText: "text",
            autoGenerated: false,
        },
    },
    {
        accessorKey: "city",
        header: "City",
        meta: {
            hidden: false,
            type: "string",
            typeText: "text",
            autoGenerated: false,
        },
    },
    {
        accessorKey: "state",
        header: "State",
        meta: {
            hidden: false,
            type: "string",
            typeText: "text",
            autoGenerated: false,
        },
    },
    {
        accessorKey: "country",
        header: "Country",
        meta: {
            hidden: false,
            type: "string",
            typeText: "text",
            autoGenerated: false,
        },
    },
    {
        accessorKey: "zip_code",
        header: "ZIP Code",
        meta: {
            hidden: false,
            type: "string",
            typeText: "text",
            autoGenerated: false,
        },
    },
    {
        accessorKey: "address",
        header: "Address",
        meta: {
            hidden: false,
            type: "string",
            typeText: "text",
            autoGenerated: false,
        },
    },
    {
        accessorKey: "payment_terms",
        header: "Payment Terms",
        meta: {
            hidden: true,
            type: "string",
            typeText: "text",
            autoGenerated: false,
        },
    },
    {
        accessorKey: "credit_limit",
        header: "Credit Limit",
        meta: {
            hidden: false,
            type: "number",
            mode: "range",
            autoGenerated: false,
        },
    },
    {
        accessorKey: "tax_regimen",
        header: "Tax Regimen",
        meta: {
            hidden: true,
            type: "string",
            typeText: "text",
            autoGenerated: false,
        },
    },
    {
        accessorKey: "cfdi",
        header: "CFDI",
        meta: {
            hidden: false,
            type: "string",
            typeText: "text",
            autoGenerated: false,
        },
    },
    {
        accessorKey: "payment_method",
        header: "Payment Method",
        meta: {
            hidden: false,
            type: "string",
            typeText: "text",
            autoGenerated: false,
        },
    },
    {
        accessorKey: "is_active",
        header: "Active",
        meta: {
            hidden: true,
            type: "boolean",
            autoGenerated: false,
        },
    },
    {
        accessorKey: "created_at",
        header: "Created At",
        meta: {
            hidden: true,
            type: "date",
            autoGenerated: true,
        },
        enableHiding: false,
    },
    {
        accessorKey: "updated_at",
        header: "Updated At",
        meta: {
            hidden: true,
            type: "date",
            autoGenerated: true,
        },
        enableHiding: false,
    },
];

export { columnsClients };
